{"version":3,"sources":["components/Header/Header.tsx","components/SearchBox/SearchBox.tsx","components/ResultsContainer/NameCard/NameCard.tsx","components/ResultsContainer/ResultsContainer.tsx","components/App/App.tsx","reportWebVitals.js","index.js"],"names":["Header","headerChange","className","src","alt","SearchBox","onInputChange","onChange","event","target","value","type","placeholder","NameCard","name","href","ResultsContainer","Names","suggestedNames","map","item","require","App","React","useState","setHeaderChange","suggestedName","setSuggestedNames","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAiCeA,EAzB4B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1C,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,wGACJD,UAAS,qBACLD,EACM,uBACA,yBAEVG,IAAI,iBAER,oBACIF,UAAS,oBACLD,EACM,sBACA,wBAJd,gCCGGI,G,MAf0B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACxC,OACI,qBAAKJ,UAAU,mBAAf,SACI,uBACIK,SAAU,SAACC,GAAD,OACNF,EAAcE,EAAMC,OAAOC,QAE/BC,KAAK,OACLC,YAAY,gBACZV,UAAU,qBCGXW,G,MAVsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpC,OACI,mBAAGL,OAAO,SAASP,UAAU,OAAOa,KAAI,UAJ5C,yEAI4C,OAAiBD,GAAzD,SACI,qBAAKZ,UAAU,WAAf,SACI,oBAAGA,UAAU,OAAb,cAAsBY,EAAtB,aCIDE,G,MAR8B,SAAC,GAAwB,IAC5DC,EAD2D,EAArBC,eACfC,KAAI,SAACC,GAAD,OAC7B,cAAC,EAAD,CAAqBN,KAAMM,GAAZA,MAGnB,OAAO,qBAAKlB,UAAU,oBAAf,SAAoCe,MCRzCH,G,MAAOO,EAAQ,KAoBNC,EAlBO,WAAO,IAAD,EACgBC,IAAMC,UAAkB,GADxC,mBACjBvB,EADiB,KACHwB,EADG,OAEmBF,IAAMC,SAAmB,IAF5C,mBAEjBE,EAFiB,KAEFC,EAFE,KAQxB,OACI,sBAAKzB,UAAU,YAAf,UACI,cAAC,EAAD,CAAQD,aAAcA,IACtB,cAAC,EAAD,CAAWK,cARO,SAACsB,GACvBH,GAAiBG,GACjBD,EAAkBC,EAAId,EAAKc,GAAK,OAO5B,cAAC,EAAD,CAAkBV,eAAgBQ,QCT/BG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0afd6d40.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.css';\n\ninterface HeaderChangeType {\n    headerChange: boolean;\n}\n\nconst Header: React.FC<HeaderChangeType> = ({ headerChange }) => {\n    return (\n        <div className=\"head-container\">\n            <img\n                src=\"https://user-images.githubusercontent.com/26179770/106359099-693e3380-6336-11eb-8069-9e36f25de5ca.png\"\n                className={`head-image ${\n                    headerChange\n                        ? 'head-image-exapanded'\n                        : 'head-image-contracted'\n                }`}\n                alt=\"Header Image\"\n            />\n            <h1\n                className={`head-text ${\n                    headerChange\n                        ? 'head-text-exapanded'\n                        : 'head-text-contracted'\n                }`}\n            >\n                Naming Capsule\n            </h1>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport './SearchBox.css';\n\ninterface SearchInput {\n    onInputChange: (e: string) => void;\n}\n\nconst SearchBox: React.FC<SearchInput> = ({ onInputChange }) => {\n    return (\n        <div className=\"search-container\">\n            <input\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                    onInputChange(event.target.value)\n                }\n                type=\"text\"\n                placeholder=\"Type Keywords\"\n                className=\"search-input\"\n            />\n        </div>\n    );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport './NameCard.css';\n\ninterface NameType {\n    name: string;\n}\n\nconst nameCheap =\n    'https://www.namecheap.com/domains/registration/results/?domain=%27%3B';\n\nconst NameCard: React.FC<NameType> = ({ name }) => {\n    return (\n        <a target=\"_blank\" className=\"link\" href={`${nameCheap}${name}`}>\n            <div className=\"namecard\">\n                <p className=\"name\"> {name} </p>\n            </div>\n        </a>\n    );\n};\n\nexport default NameCard;\n","import React from 'react';\n\nimport NameCard from './NameCard/NameCard';\n\nimport './ResultsContainer.css';\n\ninterface NameType {\n    suggestedNames: string[];\n}\n\nconst ResultsContainer: React.FC<NameType> = ({ suggestedNames }) => {\n    const Names = suggestedNames.map((item) => (\n        <NameCard key={item} name={item} />\n    ));\n\n    return <div className=\"results-container\">{Names}</div>;\n};\n\nexport default ResultsContainer;\n","import React from 'react';\nimport Header from '../Header/Header';\nimport SearchBox from '../SearchBox/SearchBox';\nimport ResultsContainer from '../ResultsContainer/ResultsContainer';\n\nimport './App.css';\n\nconst name = require('@rstacruz/startup-name-generator');\n\nconst App: React.FC = () => {\n    const [headerChange, setHeaderChange] = React.useState<boolean>(true);\n    const [suggestedName, setSuggestedNames] = React.useState<string[]>([]);\n    const handleInputChange = (e: string) => {\n        setHeaderChange(!e);\n        setSuggestedNames(e ? name(e) : []);\n    };\n\n    return (\n        <div className=\"container\">\n            <Header headerChange={headerChange} />\n            <SearchBox onInputChange={handleInputChange} />\n            <ResultsContainer suggestedNames={suggestedName} />\n           \n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}